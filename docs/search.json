[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Measurement error",
    "section": "",
    "text": "This is the landing page for practical exercises related to the topic survey measurement error, from the Utrecht University summer course S16: survey research.\nThe slides can be found here: https://daob.nl/files/S16-measurement-error-slides.pdf\nThe exercises themselves can be found in the navigation bar to the left. At the moment, the only available exercises are those regarding estimation of measurement error: https://daob.github.io/measurement-error/exercise-1.html\nThe slides, current page, and the exercises were created by me."
  },
  {
    "objectID": "exercise-1.html",
    "href": "exercise-1.html",
    "title": "Estimating survey measurement error",
    "section": "",
    "text": "Below, you will find 10 exercises (1.1 – 1.10) related to the estimation of measurement error in survey questions. You are meant to work through this document gradually, by starting at the top reading, and doing the first exercise in R, etc. You may need to install some libraries, which are indicated under “Preliminaries” below. You will also require an internet connection to download the two datasets used in the exercises.\nIf you have not already done so, it may also be helpful to keep the slides open so you can refer to them as you answer the more knowledge-oriented questions.\nEach exercise consists of a question. Often you will need to adapt and run R code in order to answer this question. In order to help you along should your experience with R be limited, some (hopefully) helpful hints are provided. You can choose to look at these, or not, as you may require. The hints look as shown below. CLick the green bar to reveal the hint.\n\n\n\n\n\n\nI need a hint!\n\n\n\n\n\nHints are intended to help you along, especially if you are encountering R and/or lavaan for the first time.\n\n\n\nEach exercise also provides a solution so you can check your own work. Your learning will be most effective if you try not to look at these right away, but instead attempt the question first. If you really get stuck, or if you are happy with your answer, you could allow yourself to look at the solution, which look as shown below. Click the orange bar to reveal the solution.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nPlease try not to look at the solution until you have attempted the question in earnest.\n\n\n\nRemember that you are strongly encouraged to consult your instructor and fellow students. Often a very small nudge in the right direction can be enough to get to the right answer!"
  },
  {
    "objectID": "exercise-1.html#a-first-look-at-the-european-social-survey-data",
    "href": "exercise-1.html#a-first-look-at-the-european-social-survey-data",
    "title": "Estimating survey measurement error",
    "section": "A first look at the European Social Survey data",
    "text": "A first look at the European Social Survey data\nIn the European Social Survey round 7, data have been collected on 28,221 European’s health (among many other topics). I have downloaded and recoded some of these data. You have them available in the R prompt as ess7_health.\nThis dataset has the following variables in it:\n\ndshltgp : DISCUSSED HEALTH, LAST 12 MONTHS: GENERAL PRACTITIONER\ndosprt : DO SPORTS OR OTHER PHYSICAL ACTIVITY, HOW MANY OF LAST 7 DAYS\nalcfreq : HOW OFTEN DRINK ALCOHOL\netfruit : HOW OFTEN EAT FRUIT, EXCLUDING DRINKING JUICE\neatveg : HOW OFTEN EAT VEGETABLES OR SALAD, EXCLUDING POTATOES\nhealth : SUBJECTIVE GENERAL HEALTH\nhappy : HOW HAPPY ARE YOU\nslprl : SLEEP WAS RESTLESS, HOW OFTEN PAST WEEK\nagea : Age\neisced : Education level\nbrncntr : BORN IN COUNTRY\nsmoke : Whether person currently smokes (recode of ESS variable CGTSMKE)\nBMI : Body mass index (recode of ESS variables HEIGHT and WEIGHT)\nhealth_problems : Number of health problems (recode of ESS variables HLTHPRxx)\n\nYou may want to copy-paste this list into a text file for future reference.\nSee the link above for the full questionnaire, and the ESS “variables and questions” Appendix for a full list of variables and their names and possible values.\n\nExercise 1.1\nCheck out the summary of ess7_health.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nsummary(ess7_health)\n\n    dshltgp         dosprt       alcfreq        etfruit         eatveg    \n Min.   :1.00   Min.   :0.0   Min.   :1.00   Min.   :1.00   Min.   :1.00  \n 1st Qu.:1.00   1st Qu.:1.0   1st Qu.:3.00   1st Qu.:2.00   1st Qu.:3.00  \n Median :2.00   Median :3.0   Median :4.00   Median :3.00   Median :3.00  \n Mean   :1.74   Mean   :3.3   Mean   :4.22   Mean   :3.15   Mean   :3.13  \n 3rd Qu.:2.00   3rd Qu.:6.0   3rd Qu.:6.00   3rd Qu.:4.00   3rd Qu.:4.00  \n Max.   :2.00   Max.   :7.0   Max.   :7.00   Max.   :7.00   Max.   :7.00  \n                NA's   :242   NA's   :165    NA's   :31     NA's   :34    \n     health         happy           slprl           agea         eisced    \n Min.   :0.00   Min.   : 1.00   Min.   :1.00   Min.   : 14   Min.   :2.00  \n 1st Qu.:2.00   1st Qu.: 8.00   1st Qu.:1.00   1st Qu.: 34   1st Qu.:4.00  \n Median :3.00   Median : 9.00   Median :2.00   Median : 49   Median :5.00  \n Mean   :2.86   Mean   : 8.53   Mean   :1.73   Mean   : 49   Mean   :4.97  \n 3rd Qu.:3.00   3rd Qu.:10.00   3rd Qu.:2.00   3rd Qu.: 64   3rd Qu.:6.00  \n Max.   :4.00   Max.   :11.00   Max.   :4.00   Max.   :114   Max.   :9.00  \n NA's   :25     NA's   :84      NA's   :87     NA's   :53    NA's   :98    \n    brncntr         smoke            BMI      health_problems\n Min.   :1.00   Min.   :0.000   Min.   :0     Min.   :1.1    \n 1st Qu.:1.00   1st Qu.:0.000   1st Qu.:0     1st Qu.:1.1    \n Median :1.00   Median :0.000   Median :0     Median :1.1    \n Mean   :1.11   Mean   :0.237   Mean   :0     Mean   :1.1    \n 3rd Qu.:1.00   3rd Qu.:0.000   3rd Qu.:0     3rd Qu.:1.2    \n Max.   :2.00   Max.   :1.000   Max.   :0     Max.   :1.7    \n NA's   :11                     NA's   :789   NA's   :2051"
  },
  {
    "objectID": "exercise-1.html#criterion-correlations",
    "href": "exercise-1.html#criterion-correlations",
    "title": "Estimating survey measurement error",
    "section": "Criterion correlations",
    "text": "Criterion correlations\nIn this exercise, you will start by reproducing the “criterion correlations” for discussing your health with a general practiction (GP) from the slides. Then you will look at other variables in the dataset.\nNote that the example code uses dplyr pipes, the select function, and friends. This is not mandatory but just easier to read. See https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html if you’d like to find out more about using dplyr.\nPossibly helpful: the ESS “variables and questions” Appendix for a full list of variables and their names and possible values.\n\nExercise 1.2\n\nCorrelate health discussion with the GP with the following variables: doing sports, sleeping problems, body-mass index, and age. Check this gives the same result as in the slides\nLook at more “criterion” variables: eating fruit and vegetables, happiness, education level, and being born in the country of residence\nDo the correlations you find agree with the expectations of the “nomological net” around “visiting the GP”?\n\n\n\n\n\n\n\nI need a hint!\n\n\n\n\n\n\nYou can look at correlations with additional variables by adding these to the select statement\nRemember R code is cAsE SENSITIVE and check for any typos (note most variable names here are in lower case)\nIf you need to know more about the variables, check out the Appendix linked above\nCheck that the code provided to output only the correlations with GP, in alphabetical order, is used for both parts\n\nA starting point for the code is below.\n\n# ess7_health is available in your workspace\n\n# Correlate discussing health with GP with the following variables: \n#   doing sports, sleeping problems, body-mass index, and age\n#   (the argument \"pairwise.complete.obs\" for the `cor` function \n#       deletes missing values for each pair of variables)\n\ncriterion_slides <- ess7_health %>% \n  dplyr::select(dshltgp, dosprt, <complete this>) %>% \n  cor(use = \"pairwise.complete.obs\")\n\n# To make it easier to check your answer, \n#   sort by name and output only correlations with GP: \ncriterion_slides <- \n  criterion_slides[\"dshltgp\", sort(colnames(criterion_slides)[-1])] \ncriterion_slides\n\n# Now correlate with eating fruit and vegetables, happiness, \n#   education level, and being born in the country of residence\n# And assign the result to criterion_extra\n\ncriterion_extra <- <complete this>\n  \n  \n  # To make it easier to check your answer, \n  # sort by name and output only correlations with GP: \ncriterion_extra <- \n  criterion_extra[\"dshltgp\", \n                  sort(colnames(criterion_extra)[-1])] \n\ncriterion_extra\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n# Correlate discussing health with GP with the following variables: doing sports, age, sleeping problems, and body-mass index\ncriterion_slides <- \n  ess7_health %>% \n  select(dshltgp, dosprt, agea, slprl, BMI) %>% \n  cor(use = \"pairwise.complete.obs\") \n\ncriterion_slides <- \n  criterion_slides[\"dshltgp\",\n                   sort(colnames(criterion_slides)[-1])] \n\ncriterion_slides\n\n    agea      BMI   dosprt    slprl \n 0.14655  0.07226 -0.04612  0.10704 \n\n\n\n# Correlate with eating fruit and vegetables, happiness, eduction level, and being born in the country of residence\ncriterion_extra <- \n  ess7_health %>%\n  select(dshltgp, etfruit, eatveg, happy, eisced, brncntr) %>%\n  cor(use = \"pairwise.complete.obs\")\n\ncriterion_extra <- \n  criterion_extra[\"dshltgp\",\n                  sort(colnames(criterion_extra)[-1])] \n\ncriterion_extra\n\n  brncntr    eatveg    eisced   etfruit     happy \n-0.009341 -0.025151 -0.043128 -0.045863 -0.036161 \n\n\n\n\n\n\n\nExercise 1.3\nLooking at the criterion correlations, one of them is close to zero. To which variable does this correlation correspond?\n\n\n\n\n\n\nSolution\n\n\n\n\n\nAnswer: “Born in country” has a correlation close to zero with GP visits.\nIt is also not clear what we would have expected here. Maybe immigrants are unhealthier and need more treatment (negative association), or maye they are less able to find their way to the GP (positive association).\n\n\n\n\n\nExercise 1.4\nWhat can we conclude from the fact that the criterion correlation with “born in country” is so small?\nChoose one:\nA. The validity of this question is low\nB. The reliability of this question is low\nC. The criterion variable has low validity \nD. Nothing\n\n\n\n\n\n\nI need a hint!\n\n\n\n\n\nThink back to the disadvantages of criterion validity from the slides.\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThe answer is D: nothing. It just doesn’t really help to know this at all."
  },
  {
    "objectID": "exercise-1.html#internal-consistency-with-factor-analysis",
    "href": "exercise-1.html#internal-consistency-with-factor-analysis",
    "title": "Estimating survey measurement error",
    "section": "Internal consistency with factor analysis",
    "text": "Internal consistency with factor analysis\nAs explained in the lectures, when there are no repeated measures of the same question, we can use repeated measures of the same concept to get at the “internal consistency”.\nThis code uses the cfa function from the lavaan library, which is very flexible. The model syntax is relatively easy to read: in this example, we only need to define which variables are regressed on the latent variable (concept) health_latent. This is done by using the =~ operator, which means “is measured by”.\nNote that the results here may be different from those in the slides.\nIf you would like to learn more on doing confirmatory factor analysis in R using lavaan, the tutorial at http://lavaan.ugent.be/tutorial/cfa.html is a good place to start. I can also recommend the book by Beaujean (see here) with accompanying R code.\n\nExercise 1.5\n\nEstimate the internal consistency coefficient of “discussing health with GP” based on the same three indicators as in the slides: GP, self-rated health, and sleeping problems.\nChange the code to also use the number of reported health problems as an indicator\n\n\n\n\n\n\n\nI need a hint!\n\n\n\n\n\nHere is some sample code you can adapt to your needs.\n\nlibrary(lavaan)\n\n# Use the cfa function from the lavaan package to fit a \n#   confirmatory factor analysis (CFA) model that gives the \n#   internal consistency  coefficients as \"standardized loadings\" (or \"coefficients\")  \n\n# The latent concept \"health_latent\" is posited to be \n#       the common cause of these three variables (\"indicators\")\nmodel <- \"health_latent =~ dshltgp + health + slprl\"\n\n# Fit the model in lavaan and assign the result to a variable\nfit <- cfa(model, data = ess7_health)\n\n# Print the output of the CFA \n#   standardized loadings will be the consistency coefficients \nsummary(fit, standardized = TRUE)\n\n# A different way of getting at these is:\nconsistencies <- standardizedSolution(fit) %>% filter(op == \"=~\")\nconsistencies\n\n# Change the analysis so health_problems is also included as an indicator.\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n# Use the cfa function from the lavaan package to fit a \n#   confirmatory factor analysis (CFA) model that gives the \n#   internal consistency  coefficients as \"standardized loadings\" (or \"coefficients\")  \n\n# The latent concept \"health_latent\" is posited to be \n#       the common cause of these three variables (\"indicators\")\nmodel <- \"health_latent =~ dshltgp + health + slprl + health_problems\"\n\n# Fit the model in lavaan and assign the result to a variable\nfit <- cfa(model, data = ess7_health)\n\n# Print the output of the CFA \n#   standardized loadings will be the consistency coefficients \nsummary(fit, standardized = TRUE)\n\nlavaan 0.6.15 ended normally after 28 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                         8\n\n                                                  Used       Total\n  Number of observations                         26073       28221\n\nModel Test User Model:\n                                                      \n  Test statistic                                15.754\n  Degrees of freedom                                 2\n  P-value (Chi-square)                           0.000\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  health_latent =~                                                      \n    dshltgp           1.000                               0.121    0.278\n    health           -4.796    0.145  -33.009    0.000   -0.581   -0.664\n    slprl             2.978    0.096   31.158    0.000    0.361    0.432\n    health_problms    0.505    0.015   33.161    0.000    0.061    0.639\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n   .dshltgp           0.175    0.002  108.734    0.000    0.175    0.923\n   .health            0.428    0.008   55.508    0.000    0.428    0.559\n   .slprl             0.566    0.006   98.779    0.000    0.566    0.813\n   .health_problms    0.005    0.000   61.084    0.000    0.005    0.592\n    health_latent     0.015    0.001   18.197    0.000    1.000    1.000\n\n# A different way of getting at these is:\nconsistencies <- standardizedSolution(fit) %>% filter(op == \"=~\")\nconsistencies\n\n            lhs op             rhs est.std    se      z pvalue ci.lower\n1 health_latent =~         dshltgp   0.278 0.007  37.78      0    0.264\n2 health_latent =~          health  -0.664 0.007 -88.70      0   -0.678\n3 health_latent =~           slprl   0.432 0.007  62.30      0    0.419\n4 health_latent =~ health_problems   0.639 0.007  86.59      0    0.624\n  ci.upper\n1    0.293\n2   -0.649\n3    0.446\n4    0.653\n\n\n\n\n\n\n\nExercise 1.6\n\nList the assumptions necessary to be able interpret the Std.all coefficients as the “internal consistency” of the items.\nWhy is one of the coefficients of an opposite sign to the others?\nAssuming the assumptions all hold, which item is the best measure of the underlying latent construct?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nThe assumptions are:\n\n\nNo correlated error\nTrue scores all measure same construct\nNo differential error\n\n\nBecause three of the indicators indicate bad health, while one (health) indicates good health.\nThe indicator health. The indicator health_problems is very close in quality as an indicator of the LV.\n\n\n\n\n\n\nExercise 1.7\nAfter an additional indicator was used to measure the latent concept “health_latent”, the internal consistency estimate for “GP” changed. What could be the explanation?\nA. Sampling fluctuations\nB. Violation of assumptions\nC. Both sampling and assumption violations\nD. None of the above\n\n\n\n\n\n\nSolution\n\n\n\n\n\nIf the model is true (so no assumptions are violated) and there is infinite data, using more indicators will not change the consistency estimate. So either sampling or assumption violations can cause this change (Answer C)."
  },
  {
    "objectID": "exercise-1.html#multitrait-multimethod-models-looking-at-correlations",
    "href": "exercise-1.html#multitrait-multimethod-models-looking-at-correlations",
    "title": "Estimating measurement error (variance) in survey questions",
    "section": "Multitrait-multimethod models: looking at correlations",
    "text": "Multitrait-multimethod models: looking at correlations\nThe correlations between the variables measured in the multitrait-multimethod (MTMM) experiment from the slides from Saris & Gallhofer are plotted below. The “correlation plot” below shows these as larger or smaller circles. The larger the circle, the stronger the correlation (positive or negative).\n\n\n\n\n\n\n\n\n\n\n\nClick here to show correlations in a table\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT1M1\nT2M1\nT3M1\nT1M2\nT2M2\nT3M2\nT1M3\nT2M3\nT3M3\n\n\n\n\nT1M1\n1.000\n0.481\n0.373\n-0.626\n-0.429\n-0.453\n-0.502\n-0.370\n-0.336\n\n\nT2M1\n0.481\n1.000\n0.552\n-0.422\n-0.663\n-0.495\n-0.347\n-0.608\n-0.406\n\n\nT3M1\n0.373\n0.552\n1.000\n-0.410\n-0.532\n-0.669\n-0.332\n-0.399\n-0.566\n\n\nT1M2\n-0.626\n-0.422\n-0.410\n1.000\n0.642\n0.612\n0.548\n0.429\n0.406\n\n\nT2M2\n-0.429\n-0.663\n-0.532\n0.642\n1.000\n0.693\n0.436\n0.653\n0.471\n\n\nT3M2\n-0.453\n-0.495\n-0.669\n0.612\n0.693\n1.000\n0.438\n0.466\n0.638\n\n\nT1M3\n-0.502\n-0.347\n-0.332\n0.548\n0.436\n0.438\n1.000\n0.556\n0.514\n\n\nT2M3\n-0.370\n-0.608\n-0.399\n0.429\n0.653\n0.466\n0.556\n1.000\n0.558\n\n\nT3M3\n-0.336\n-0.406\n-0.566\n0.406\n0.471\n0.638\n0.514\n0.558\n1.000\n\n\n\n\n\n\n\n\nThe variables have been renamed to show which “trait” (survey question) and “method” (way of asking the question) they correspond to. For example, T1M1 might refer to “satisfaction with the economy” (T1) measured on a four point scale (M1), and T1M2 to “satisfaction with the economy” (T1) measured on an eleven point scale (M2).\n\nExercise 1.8\nWhich correlations from the MTMM experiment are strongest?\nA. Those between different questions measured in the same way (\"heterotrait-monomethod\")\nB. Those between the same questions measured in different ways (\"monotrait-heteromethod\")\nC. Those between different questions measured in different ways (\"heteromethod-heterotrait\")\nD. All the correlations are the same\n\n\n\n\n\n\nI need a hint!\n\n\n\n\n\nTry to find the different groups of correlations mentioned in the picture. Which group has the largest circles overall?\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nAnswer: B. Those between the same questions measured in different ways (“monotrait-heteromethod”)\nThis seems like a good thing. This classification of groups of correlations is due to Campbell and Fiske (1959), who based their assessment of the measurement properties purely on the type of consideration you have just done."
  },
  {
    "objectID": "exercise-1.html#multitrait-multimethod-models",
    "href": "exercise-1.html#multitrait-multimethod-models",
    "title": "Estimating survey measurement error",
    "section": "Multitrait-multimethod models",
    "text": "Multitrait-multimethod models\nThe correlations between the variables measured in the multitrait-multimethod (MTMM) experiment from the slides from Saris & Gallhofer are plotted below (the matrix itself will be called R here).\nThe “correlation plot” below shows these as larger or smaller circles. The larger the circle, the stronger the correlation (positive or negative).\n\n\n\n\n\n\n\n\n\n\n\nClick here to show correlations in a table\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT1M1\nT2M1\nT3M1\nT1M2\nT2M2\nT3M2\nT1M3\nT2M3\nT3M3\n\n\n\n\nT1M1\n1.000\n0.481\n0.373\n-0.626\n-0.429\n-0.453\n-0.502\n-0.370\n-0.336\n\n\nT2M1\n0.481\n1.000\n0.552\n-0.422\n-0.663\n-0.495\n-0.347\n-0.608\n-0.406\n\n\nT3M1\n0.373\n0.552\n1.000\n-0.410\n-0.532\n-0.669\n-0.332\n-0.399\n-0.566\n\n\nT1M2\n-0.626\n-0.422\n-0.410\n1.000\n0.642\n0.612\n0.548\n0.429\n0.406\n\n\nT2M2\n-0.429\n-0.663\n-0.532\n0.642\n1.000\n0.693\n0.436\n0.653\n0.471\n\n\nT3M2\n-0.453\n-0.495\n-0.669\n0.612\n0.693\n1.000\n0.438\n0.466\n0.638\n\n\nT1M3\n-0.502\n-0.347\n-0.332\n0.548\n0.436\n0.438\n1.000\n0.556\n0.514\n\n\nT2M3\n-0.370\n-0.608\n-0.399\n0.429\n0.653\n0.466\n0.556\n1.000\n0.558\n\n\nT3M3\n-0.336\n-0.406\n-0.566\n0.406\n0.471\n0.638\n0.514\n0.558\n1.000\n\n\n\n\n\n\n\n\nThe variables have been renamed to show which “trait” (survey question) and “method” (way of asking the question) they correspond to. For example, T1M1 might refer to “satisfaction with the economy” (T1) measured on a four point scale (M1), and T1M2 to “satisfaction with the economy” (T1) measured on an eleven point scale (M2).\n\nExercise 1.8\nWhich correlations from the MTMM experiment are strongest?\nA. Those between different questions measured in the same way (\"heterotrait-monomethod\")\nB. Those between the same questions measured in different ways (\"monotrait-heteromethod\")\nC. Those between different questions measured in different ways (\"heteromethod-heterotrait\")\nD. All the correlations are the same\n\n\n\n\n\n\nI need a hint!\n\n\n\n\n\nTry to find the different groups of correlations mentioned in the picture. Which group has the largest circles overall?\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nAnswer: B. Those between the same questions measured in different ways (“monotrait-heteromethod”)\nThis seems like a good thing. This classification of groups of correlations is due to Campbell and Fiske (1959), who based their assessment of the measurement properties purely on the type of consideration you have just done.\n\n\n\n\n\nExercise 1.9\nMTMM models can be applied to MTMM data to obtain estimates of the reliability coefficients and method effects.\nSince the MTMM design crosses “traits” (survey questions in our case) with “methods” (ways of asking those questions), this is a matter of specifying the right indicator for each factor in a factor analysis.\nThis time, due to the study design, the interpretation of the standardized factor loadings is that they represent “reliability coefficients” and “method effects” of the questions studied.\n\nFormulate the MTMM model for the correlations in the MTMM correlation matrix R by replacing the ... dots in the code below;\nRun the model to obtain estimates using the ready-made code;\nInterpret the results by looking at the standardized estimates.\n\nHINT: The standardized coefficients on the T* factors are the reliability coefficient estimates; The standardized coefficients on the M* factors are the method effect estimates.\n\nReady-made code for MTMM model\nAdjust the code below to answer the questions above.\n\nlibrary(lavaan)\nlibrary(dplyr)\n\n# Show the correlation matrix:\nR\n\n# Define the MTMM model below (see slides)\nmodel <- \"\n  # Fill in the measurement of the traits and methods.\n  # Note that the names are T1M1, T1M2, etc.\n\n  # Model for the methods: prefix every variable with 1*, \n  #         e.g use M1 =~ 1*T1M1 + ...\n  M1 =~ ...                         # Replace the dots \n  M2 =~ ...\n  M3 =~ ...\n\n  # Model for the traits: don't prefix indicators with anything\n  T1 =~ ...\n  T2 =~ ...\n  T3 =~ ...\n\n  # This specifies that the traits correlate. You can leave it as-is\n  T1 ~~ T2 + T3\n  T2 ~~ T3\n\n  # This identifies the latent trait variables by \n  #     standardizing them to variance 1. You can leave it as-is.\n  T1 ~~ 1*T1\n  T2 ~~ 1*T2\n  T3 ~~ 1*T3\n\"\n\n# Fit the model as a CFA using lavaan\nfit <- lavaan(model, sample.cov = R, \n              sample.nobs = 424, \n              auto.cov.lv.x = FALSE, \n              auto.fix.first = FALSE, auto.var = TRUE)\n\n# Summarize the results\nsummary(fit, standardize = TRUE)\n\n# The standardized loadings (those with op \"=~\") are \n#       the reliability coefficients (for Tx) \n#       and method effects (for Mx):\nstd_estimates <- standardizedSolution(fit) %>% dplyr::filter(op == \"=~\") %>% dplyr::arrange(lhs, rhs)\nstd_estimates\n\n\n\n\n\n\n\nI need a hint!\n\n\n\n\n\n\nUse the names of the variables: “T1M1” belongs to trait factor T1 and method factor M1, for instance\nMake sure the method indicators each have their loading set to 1 by using the 1* suggested\nMake sure the original code for the model is not accidentally removed: only change the dots.\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n# Show the correlation matrix:\nR\n\n       T1M1   T2M1   T3M1   T1M2   T2M2   T3M2   T1M3   T2M3   T3M3\nT1M1  1.000  0.481  0.373 -0.626 -0.429 -0.453 -0.502 -0.370 -0.336\nT2M1  0.481  1.000  0.552 -0.422 -0.663 -0.495 -0.347 -0.608 -0.406\nT3M1  0.373  0.552  1.000 -0.410 -0.532 -0.669 -0.332 -0.399 -0.566\nT1M2 -0.626 -0.422 -0.410  1.000  0.642  0.612  0.548  0.429  0.406\nT2M2 -0.429 -0.663 -0.532  0.642  1.000  0.693  0.436  0.653  0.471\nT3M2 -0.453 -0.495 -0.669  0.612  0.693  1.000  0.438  0.466  0.638\nT1M3 -0.502 -0.347 -0.332  0.548  0.436  0.438  1.000  0.556  0.514\nT2M3 -0.370 -0.608 -0.399  0.429  0.653  0.466  0.556  1.000  0.558\nT3M3 -0.336 -0.406 -0.566  0.406  0.471  0.638  0.514  0.558  1.000\n\n# Define the MTMM model below (see slides)\nmodel <- \"\nM1 =~ 1*T1M1 + 1*T2M1 + 1*T3M1\nM2 =~ 1*T1M2 + 1*T2M2 + 1*T3M2\nM3 =~ 1*T1M3 + 1*T2M3 + 1*T3M3\n\nT1 =~ T1M1 + T1M2 + T1M3\nT2 =~ T2M1 + T2M2 + T2M3\nT3 =~ T3M1 + T3M2 + T3M3\n\nT1 ~~ T2 + T3\nT2 ~~ T3\n\nT1 ~~ 1*T1\nT2 ~~ 1*T2\nT3 ~~ 1*T3\"\n\n# Fit the model as a CFA using lavaan\nfit <- lavaan(model, sample.cov = R, \n              sample.nobs = 424, \n              auto.cov.lv.x = FALSE, \n              auto.fix.first = FALSE, auto.var = TRUE)\n\n# Summarize the results\nsummary(fit, standardize = TRUE)\n\nlavaan 0.6.15 ended normally after 29 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        24\n\n  Number of observations                           424\n\nModel Test User Model:\n                                                      \n  Test statistic                                40.566\n  Degrees of freedom                                21\n  P-value (Chi-square)                           0.006\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  M1 =~                                                                 \n    T1M1              1.000                               0.274    0.272\n    T2M1              1.000                               0.274    0.276\n    T3M1              1.000                               0.274    0.272\n  M2 =~                                                                 \n    T1M2              1.000                               0.364    0.370\n    T2M2              1.000                               0.364    0.368\n    T3M2              1.000                               0.364    0.367\n  M3 =~                                                                 \n    T1M3              1.000                               0.424    0.425\n    T2M3              1.000                               0.424    0.425\n    T3M3              1.000                               0.424    0.421\n  T1 =~                                                                 \n    T1M1              0.756    0.047   16.248    0.000    0.756    0.749\n    T1M2             -0.803    0.044  -18.356    0.000   -0.803   -0.814\n    T1M3             -0.676    0.046  -14.772    0.000   -0.676   -0.677\n  T2 =~                                                                 \n    T2M1              0.793    0.043   18.508    0.000    0.793    0.798\n    T2M2             -0.852    0.041  -20.806    0.000   -0.852   -0.860\n    T2M3             -0.761    0.043  -17.861    0.000   -0.761   -0.762\n  T3 =~                                                                 \n    T3M1              0.771    0.045   17.273    0.000    0.771    0.766\n    T3M2             -0.850    0.042  -20.313    0.000   -0.850   -0.855\n    T3M3             -0.736    0.044  -16.691    0.000   -0.736   -0.731\n\nCovariances:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  T1 ~~                                                                 \n    T2                0.693    0.033   20.785    0.000    0.693    0.693\n    T3                0.670    0.035   18.881    0.000    0.670    0.670\n  T2 ~~                                                                 \n    T3                0.742    0.029   25.978    0.000    0.742    0.742\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n    T1                1.000                               1.000    1.000\n    T2                1.000                               1.000    1.000\n    T3                1.000                               1.000    1.000\n   .T1M1              0.371    0.040    9.345    0.000    0.371    0.365\n   .T2M1              0.283    0.031    9.068    0.000    0.283    0.287\n   .T3M1              0.343    0.035    9.720    0.000    0.343    0.339\n   .T1M2              0.195    0.031    6.311    0.000    0.195    0.200\n   .T2M2              0.123    0.023    5.355    0.000    0.123    0.125\n   .T3M2              0.134    0.026    5.195    0.000    0.134    0.135\n   .T1M3              0.361    0.037    9.767    0.000    0.361    0.361\n   .T2M3              0.238    0.029    8.319    0.000    0.238    0.239\n   .T3M3              0.293    0.032    9.115    0.000    0.293    0.289\n    M1                0.075    0.022    3.491    0.000    1.000    1.000\n    M2                0.133    0.023    5.787    0.000    1.000    1.000\n    M3                0.180    0.025    7.291    0.000    1.000    1.000\n\n# The standardized loadings are the reliability coefficients (for Tx) \n#       and method effects (for Mx):\nstd_estimates <- standardizedSolution(fit) %>% dplyr::filter(op == \"=~\") %>% dplyr::arrange(lhs, rhs)\nstd_estimates\n\n   lhs op  rhs est.std    se       z pvalue ci.lower ci.upper\n1   M1 =~ T1M1   0.272 0.039   6.944      0    0.195    0.349\n2   M1 =~ T2M1   0.276 0.040   6.930      0    0.198    0.354\n3   M1 =~ T3M1   0.272 0.039   6.936      0    0.195    0.349\n4   M2 =~ T1M2   0.370 0.032  11.376      0    0.306    0.433\n5   M2 =~ T2M2   0.368 0.033  11.280      0    0.304    0.432\n6   M2 =~ T3M2   0.367 0.032  11.307      0    0.303    0.430\n7   M3 =~ T1M3   0.425 0.029  14.560      0    0.367    0.482\n8   M3 =~ T2M3   0.425 0.030  14.398      0    0.367    0.483\n9   M3 =~ T3M3   0.421 0.029  14.450      0    0.364    0.478\n10  T1 =~ T1M1   0.749 0.030  25.189      0    0.691    0.808\n11  T1 =~ T1M2  -0.814 0.026 -31.180      0   -0.865   -0.763\n12  T1 =~ T1M3  -0.677 0.032 -21.369      0   -0.739   -0.615\n13  T2 =~ T2M1   0.798 0.024  33.449      0    0.751    0.845\n14  T2 =~ T2M2  -0.860 0.020 -42.366      0   -0.900   -0.820\n15  T2 =~ T2M3  -0.762 0.025 -30.881      0   -0.810   -0.713\n16  T3 =~ T3M1   0.766 0.027  28.836      0    0.714    0.818\n17  T3 =~ T3M2  -0.855 0.022 -39.184      0   -0.897   -0.812\n18  T3 =~ T3M3  -0.731 0.027 -26.880      0   -0.784   -0.677\n\n\n\n\n\nIf you managed to get this, excellent job! MTMM modeling can be quite confusing, especially at the beginning. With practice it will become more natural, and can be a powerful tool in your measurement error arsenal."
  },
  {
    "objectID": "exercise-1.html#quasi-simplex-model",
    "href": "exercise-1.html#quasi-simplex-model",
    "title": "Estimating survey measurement error",
    "section": "Quasi-simplex model",
    "text": "Quasi-simplex model\nThese models can be used to estimate the measurement error variance in longitudinal data. Such data are available from the LISS panel.\nIn the slides, error estimation in “internet use” using three timepoints (years 2008-2010) is explained. In the dataset, which is included in the lavaan.survey package as liss, a fourth timepoint, 2011, is also available (cs11d247). Adjust the model to the right to include cs11d247 so it also estimates the reliability in 2011.\nThe full study documentation as well as the raw data are publicly available at http://www.lissdata.nl/dataarchive/study_units/view/6. (BTW: LISS is an awesome publicly available longitudinal data source you should definitely check out if you’re ever looking for high-quality social science data)\nFor now, we will load a prepared dataset from LISS stored on my website.\n\nload(url(\"http://daob.nl/files/SURV730/liss.rdata\"))\n\nSince it is likely that you have not encountered lavaan, SEM, or quasi-simplex modeling before, some ready-made code for such a model applied to the LISS data is provided below.\n\nReady-made R code for quasi-simplex model\n\n# Formulate the quasi-simplex model for three timepoints\n# Adapt this to also include the measurement at 2011, cs11d247\nmodel.qs <- \"\n  # The part where each true score variable at time t \n  #    is measured by the survey answers at time t:\n  cs08 =~ 1 * cs08a247\n  cs09 =~ 1 * cs09b247\n  cs10 =~ 1 * cs10c247\n\n  # The part where the true score at time t \n  #     is regressed on the true score at time t-1:\n  # a.k.a. the 'AR(1) process':\n  cs09 ~ cs08\n  cs10 ~ cs09\n\n  # The part where the measurement error variance is \n  #     assumed equal over time:\n  cs08a247 ~~ vare * cs08a247\n  cs09b247 ~~ vare * cs09b247\n  cs10c247 ~~ vare * cs10c247\n\"\n# Fit the quasi-simplex model with lavaan as a SEM:\nfit.liss <- lavaan(model.qs, auto.var = TRUE, data = liss)\n\n# Output the estimates, including reliability coefficients and stability across time:\nsummary(fit.liss, standardized = TRUE)\n\n# This is to check the solution:\nstd_estimates <- fit.liss %>% \n  standardizedSolution %>% \n  filter(op == \"=~\") %>% \n  arrange(lhs, rhs)\n\nstd_estimates\n\n\n\nExercise 1.10\nInstructions: - Change the quasi-simplex model for 2008-2010 to also include 2011 - Do this by adding one additional line of code for each of the three parts of the model - Note that the newly used observed variable name is cs11d247 (so with a d)\n\nWhich assumptions do we need to make in order for the estimates to reflect the reliability of this survey question?\nWhat is the estimated reliability of this survey question according to the quasi-simplex model?\nWhat is the estimated stability over time of this survey question according to the quasi-simplex model?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nmodel.qs <- \"\n  cs08 =~ 1 * cs08a247\n  cs09 =~ 1 * cs09b247\n  cs10 =~ 1 * cs10c247\n  cs11 =~ 1 * cs11d247\n\n  cs09 ~ cs08\n  cs10 ~ cs09\n  cs11 ~ cs10\n\n  cs08a247 ~~ vare * cs08a247\n  cs09b247 ~~ vare * cs09b247\n  cs10c247 ~~ vare * cs10c247\n  cs11d247 ~~ vare * cs11d247\n\n\"\n\nfit.liss <- lavaan(model.qs, auto.var = TRUE, data = liss)\n\nsummary(fit.liss, standardized = TRUE)\n\nlavaan 0.6.15 ended normally after 25 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        11\n  Number of equality constraints                     3\n\n                                                  Used       Total\n  Number of observations                          3374        7369\n\nModel Test User Model:\n                                                      \n  Test statistic                                 2.496\n  Degrees of freedom                                 2\n  P-value (Chi-square)                           0.287\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  cs08 =~                                                               \n    cs08a247          1.000                               0.701    0.789\n  cs09 =~                                                               \n    cs09b247          1.000                               0.692    0.785\n  cs10 =~                                                               \n    cs10c247          1.000                               0.688    0.783\n  cs11 =~                                                               \n    cs11d247          1.000                               0.707    0.791\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  cs09 ~                                                                \n    cs08              0.932    0.028   32.743    0.000    0.944    0.944\n  cs10 ~                                                                \n    cs09              0.924    0.024   39.285    0.000    0.930    0.930\n  cs11 ~                                                                \n    cs10              0.929    0.024   38.245    0.000    0.903    0.903\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n   .cs08247 (vare)    0.299    0.009   34.680    0.000    0.299    0.378\n   .cs09247 (vare)    0.299    0.009   34.680    0.000    0.299    0.384\n   .cs10247 (vare)    0.299    0.009   34.680    0.000    0.299    0.387\n   .cs11247 (vare)    0.299    0.009   34.680    0.000    0.299    0.374\n    cs08              0.492    0.021   23.312    0.000    1.000    1.000\n   .cs09              0.052    0.015    3.522    0.000    0.109    0.109\n   .cs10              0.064    0.011    5.608    0.000    0.134    0.134\n   .cs11              0.092    0.016    5.790    0.000    0.185    0.185\n\n# This is to check the solution\nstd_estimates <- fit.liss %>% \n  standardizedSolution %>% \n  filter(op == \"=~\") %>% \n  arrange(lhs, rhs)\n\nstd_estimates\n\n   lhs op      rhs label est.std    se     z pvalue ci.lower ci.upper\n1 cs08 =~ cs08a247         0.789 0.009 87.16      0    0.771    0.806\n2 cs09 =~ cs09b247         0.785 0.008 93.54      0    0.768    0.801\n3 cs10 =~ cs10c247         0.783 0.009 91.93      0    0.766    0.799\n4 cs11 =~ cs11d247         0.791 0.009 88.65      0    0.774    0.809\n\n\n\nFrom the slides, we have the following assumptions:\n\n\nNo correlated error\nIdentical error variances over time\nNo differential error\nTrue score change AR(1)\nAll time-specific variance is measurement error\n\nLooking at the standardized estimates from the results above, we find that:\n\nThe reliability of this item estimated by the quasi-simplex model is about 0.8.\nThe stability of this item over time is about 0.9."
  },
  {
    "objectID": "exercise-1.html#preliminaries",
    "href": "exercise-1.html#preliminaries",
    "title": "Estimating survey measurement error",
    "section": "Preliminaries",
    "text": "Preliminaries\n\nlibrary(psych)\nlibrary(lavaan)\n\nThis is lavaan 0.6-15\nlavaan is FREE software! Please report any bugs.\n\n\n\nAttaching package: 'lavaan'\n\n\nThe following object is masked from 'package:psych':\n\n    cor2cov\n\nlibrary(semTools)\n\n \n\n\n###############################################################################\n\n\nThis is semTools 0.5-6\n\n\nAll users of R (or SEM) are invited to submit functions or ideas for functions.\n\n\n###############################################################################\n\n\n\nAttaching package: 'semTools'\n\n\nThe following objects are masked from 'package:psych':\n\n    reliability, skew\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ ggplot2::%+%()     masks psych::%+%()\n✖ ggplot2::alpha()   masks psych::alpha()\n✖ readr::clipboard() masks semTools::clipboard()\n✖ dplyr::filter()    masks stats::filter()\n✖ dplyr::lag()       masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\noptions(digits = 4)\n\nLoad data from ESS\n\nload(url(\"http://daob.nl/files/SURV730/ess7_health.rdata\"))"
  }
]